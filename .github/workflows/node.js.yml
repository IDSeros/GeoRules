# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

      # -------------------------
    # SonarCloud / SonarQube
    # -------------------------
  sonar:
        name: Sonar analysis (sonar-scanner CLI, robust)
        runs-on: ubuntu-latest
        needs: build
        steps:
          - uses: actions/checkout@v4

          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              distribution: temurin
              java-version: '17'

          - name: Use Node.js 18 (optional build)
            uses: actions/setup-node@v4
            with:
              node-version: '18'

          - name: Install Node deps (optional)
            run: npm ci

          - name: Build (if needed)
            run: npm run build --if-present

          - name: Download and unpack SonarScanner CLI (robust)
            run: |
              SCANNER_VER=4.8.0.2856
              SCANNER_ZIP=sonar-scanner-cli-${SCANNER_VER}-linux.zip
              echo "Downloading $SCANNER_ZIP ..."
              curl -sSL -o "$SCANNER_ZIP" "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/$SCANNER_ZIP"
              unzip -q "$SCANNER_ZIP" -d sonar-scanner
              echo "Contenido de sonar-scanner/:"
              ls -la sonar-scanner
              # detectar el directorio extraído (maneja sufijos como -linux)
              SCANNER_DIR=$(find sonar-scanner -maxdepth 1 -type d -name 'sonar-scanner*' -print | head -n1)
              if [ -z "$SCANNER_DIR" ]; then
                echo "ERROR: no se encontró el directorio extraído bajo sonar-scanner/"; exit 2;
              fi
              echo "Detected scanner dir: $SCANNER_DIR"
              echo "Listing $SCANNER_DIR/bin:"
              ls -la "$SCANNER_DIR/bin"
              chmod +x "$SCANNER_DIR/bin"/*
              # añadir al PATH para pasos siguientes
              echo "$PWD/$SCANNER_DIR/bin" >> $GITHUB_PATH
              echo "SonarScanner instalado en: $PWD/$SCANNER_DIR/bin"

          - name: Verify sonar-scanner and run analysis
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            run: |
              # ahora sonar-scanner debería estar en PATH gracias a $GITHUB_PATH
              echo "Which sonar-scanner:"; which sonar-scanner || true
              sonar-scanner -v || true
              # Ejecuta el análisis (ajusta projectKey/organization/host según tu setup)
              sonar-scanner \
                -Dsonar.projectKey=mi-org_mi-repo \
                -Dsonar.organization=mi-org-slug \
                -Dsonar.sources=. \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=${SONAR_TOKEN}



  # -------------------------
  # OWASP ZAP (baseline)
  # -------------------------
  zap:
    name: OWASP ZAP baseline scan
    runs-on: ubuntu-latest
    needs: build
    env:
      ZAP_TARGET: 'https://georules.onrender.com'
      ZAP_REPORT: zap_report.html
    steps:
      - uses: actions/checkout@v4

      # Instalar dependencias si la app necesita un servidor local para escanear
      - name: Install dependencies
        run: npm ci

      - name: Run ZAP baseline scan
        # Baseline scan action (rápida y segura para CI). Ajusta versión si quieres.
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: ${{ env.ZAP_TARGET }}
          # Exclude or additional args can be added here, e.g. rules, context file, etc.
          # example: args: '-r 1024 -I'
      - name: Upload ZAP report artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ${{ env.ZAP_REPORT }}