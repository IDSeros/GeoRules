# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

      # -------------------------
  # SonarCloud / SonarQube
  # -------------------------
  sonar:
    name: Sonar analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      # Sonar scanner often needs Java to run analysis (scanner-cli)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - name: Install Node deps (for analysis to work)
        uses: actions/setup-node@v4
        with:
          node-version: '18' # node used here only for build step if required
      - run: npm ci
      - run: npm run build --if-present

      # Sonar scanner action
      # Requirements:
      #  - Add secret SONAR_TOKEN in repo secrets (token from SonarCloud / SonarQube)
      #  - If using SonarCloud, also add SONAR_ORGANIZATION secret (slug)
      - name: Run SonarCloud scan (workaround)
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        with:
          args: >
            -Dsonar.projectKey=IDSeros_GeoRules
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # -------------------------
  # OWASP ZAP (baseline)
  # -------------------------
  zap:
    name: OWASP ZAP baseline scan
    runs-on: ubuntu-latest
    needs: build
    env:
      ZAP_TARGET: 'https://georules.onrender.com'
      ZAP_REPORT: zap_report.html
    steps:
      - uses: actions/checkout@v4

      # Instalar dependencias si la app necesita un servidor local para escanear
      - name: Install dependencies
        run: npm ci

      - name: Run ZAP baseline scan
        # Baseline scan action (rápida y segura para CI). Ajusta versión si quieres.
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: ${{ env.ZAP_TARGET }}
          # Exclude or additional args can be added here, e.g. rules, context file, etc.
          # example: args: '-r 1024 -I'
      - name: Upload ZAP report artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ${{ env.ZAP_REPORT }}